# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

org, repo = ENV["GITHUB_REPOSITORY"].split("/")
match_org, match_repo = ENV["MATCH_REPOSITORY"].split("/")

default_platform(:ios)
setup_ci

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
      key_content: ENV['APP_STORE_CONNECT_KEY']
    )
    # produce(
    #   username: ENV["FASTLANE_USER"],
    #   app_identifier: ENV["APP_ID"],
    #   app_name: "Test App", # TODO: Thread through from config
    #   language: "English", # TODO: Optional vars
    #   app_version: "1.0" # TODO: Thread through from build number
    #   # TODO: Optional Team ID
    #   # TODO: Company Name may be required if first app for an account
    # )

    match(type: "development")

    debug

    update_project_team(
      path: "ios/App/App.xcodeproj",
      teamid: ENV["TEAM_ID"]
    )

    disable_automatic_code_signing
    build_app(workspace: "ios/App/App.xcworkspace", scheme: "App", xcargs: "-allowProvisioningUpdates")
    upload_to_testflight
  end

  desc "Push a new build to the App Store"
  lane :app_store do
    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
      key_content: ENV['APP_STORE_CONNECT_KEY']
    )
    match(type: "appstore")
    
    update_project_team(
      path: "ios/App/App.xcodeproj",
      teamid: ENV["TEAM_ID"]
    )

    build_app(workspace: "ios/App/App.xcworkspace", scheme: "App")
    upload_to_app_store
  end

  lane :create_app do
    produce
  end


  lane :init_ci do
    github_action(
      api_token: ENV["GH_PAT"],
      org: org,
      repo: repo,
      match_org: match_org,
      match_repo: match_repo,
      writable_deploy_key: true
    )
  end
end
