name: iOS TestFlight

on: workflow_dispatch

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set game configuration
        run: |
          echo "APP_NAME=$(cat ./package.json | jq -r '.name')" >> $GITHUB_ENV
          echo "DISPLAY_NAME=$(cat ./package.json | jq -r '.displayName')" >> $GITHUB_ENV
          echo "DESCRIPTION=$(cat ./package.json | jq -r '.description')" >> $GITHUB_ENV
          echo "AUTHOR=$(cat ./package.json | jq -r '.author')" >> $GITHUB_ENV
          echo "VERSION=$(cat ./package.json | jq -r '.version')" >> $GITHUB_ENV
          echo "BUNDLE_ID="$(cat ./package.json | jq -r 'if has(".platformSpecificBundleIds.ios") then .platformSpecificBundleIds.ios else .bundleId end')" >>$GITHUB_ENV

      - name: Move config to root dir
        run: mv config/* .

      - name: Update capacitor.config.json
        run: |
          node -e "\
          const fs = require('fs');\
          const pkg=require('./capacitor.config.json');\
          pkg.appId=process.env.BUNDLE_ID;\
          pkg.appName=process.env.DISPLAY_NAME;\
          fs.writeFileSync('./capacitor.config.json',JSON.stringify(pkg,undefined,'\t'));"

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
          bundler-cache: true    

      - name: Set up project
        shell: bash
        run: |
          npm install
          npx cap add ios
          npx cap sync
          npx cordova-res ios --skip-config --copy

      - name: Build iOS
        shell: bash
        run: |
          # brew install libsodium # TODO: Is this necessary?
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${MATCH_DEPLOY_KEY}"
          bundle exec fastlane ios testflight_beta
        env:
          FASTLANE_USER: ${{ secrets.APPLE_ID }}
          GH_PAT: ${{ secrets.GH_PAT }}
          MATCH_REPOSITORY: ${{ secrets.MATCH_REPOSITORY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          GITHUB_REPOSITORY: ${{ env.GITHUB_REPOSITORY }}
          GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
          MATCH_DEPLOY_KEY: ${{ secrets.MATCH_DEPLOY_KEY }}
          
          BUNDLE_ID: ${{ env.BUNDLE_ID }} # TODO: Fetch from config file
          APP_NAME: ${{ env.APP_NAME }}
          BUILD_NUMBER: ${{ github.run_number }}
          VERSION: ${{ env.VERSION }}

          # Generate a new .p8 from https://appstoreconnect.apple.com/access/users, then "Keys"
          # I'm trying "App Manager" access
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY: ${{ secrets.APP_STORE_CONNECT_KEY }} # Raw .p8 value

      - name: Release on GitHub (Automated Tag)
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ format('{0}.0.0', github.run_number) }}
          files: |
            *.ipa