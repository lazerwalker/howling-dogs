name: Generate iOS Certs
on:
  workflow_run:
    workflows: ["iOS One-Time Setup"]
    types:
      - completed
  workflow_dispatch:

jobs:
  generate_certs:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Move config to root dir
        run: mv config/* .

      - name: Set game configuration
        run: |
          echo "APP_NAME=$(cat ./package.json | jq -r '.name')" >> $GITHUB_ENV
          echo "DISPLAY_NAME=$(cat ./package.json | jq -r '.displayName')" >> $GITHUB_ENV
          echo "DESCRIPTION=$(cat ./package.json | jq -r '.description')" >> $GITHUB_ENV
          echo "AUTHOR=$(cat ./package.json | jq -r '.author')" >> $GITHUB_ENV
          echo "VERSION=$(cat ./package.json | jq -r '.version')" >> $GITHUB_ENV
          echo "BUNDLE_ID=$(cat ./package.json | jq -r '.bundleId')" >> $GITHUB_ENV
          echo "PUBLISH_ON_WEB=$(cat ./package.json | jq -r '.publishOnWeb')" >> $GITHUB_ENV

      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
          bundler-cache: true 

      - name: Build iOS
        shell: bash
        run: |
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${MATCH_DEPLOY_KEY}"
          bundle exec fastlane sync_certificates
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
          MATCH_REPOSITORY: ${{ secrets.MATCH_REPOSITORY }}
          GITHUB_REPOSITORY: ${{ env.GITHUB_REPOSITORY }}
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY: ${{ secrets.APP_STORE_CONNECT_KEY }} # Raw .p8 value
          MATCH_DEPLOY_KEY: ${{ secrets.MATCH_DEPLOY_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

          BUNDLE_ID: ${{ secrets.BUNDLE_ID }} # TODO: Read this from Unity project
