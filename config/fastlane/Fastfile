require 'pp'

# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

org, repo = ENV["GITHUB_REPOSITORY"].split("/")
match_org, match_repo = ENV["MATCH_REPOSITORY"].split("/")

default_platform(:ios)

platform :ios do
  desc "Generate a production IPA"
  lane :build do
    setup_ci
    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
      key_content: ENV['APP_STORE_CONNECT_KEY']
    )

    match(type: "development")
    match(type: "appstore")

    update_code_signing_settings(
      use_automatic_signing: false,
      team_id: ENV["sigh_#{ENV['APP_ID']}_appstore_team-id"],
      code_sign_identity: "iPhone Distribution",
      path: "ios/App/App.xcodeproj",
      profile_name: ENV["sigh_#{ENV['APP_ID']}_appstore_profile-name"],
      profile_uuid: ENV["sigh_#{ENV['APP_ID']}_appstore"]
    )

    increment_build_number(
      build_number: ENV["BUILD_NUMBER"],
      xcodeproj: "ios/App/App.xcodeproj",
    )

    increment_version_number( 
      version_number: ENV["VERSION_NUMBER"],
      xcodeproj: "ios/App/App.xcodeproj",
    )

    build_app(
      workspace: "ios/App/App.xcworkspace", 
      scheme: "App", 
      output_name: "#{ENV['APP_NAME']} - #{ENV['VERSION_NUMBER']} (#{ENV['BUILD_NUMBER']}).ipa",
      xcargs: "-allowProvisioningUpdates"
    )
  end

  desc "Push a new beta build to TestFlight"
  lane :testflight do
    setup_ci
    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
      key_content: ENV['APP_STORE_CONNECT_KEY']
    )

    match(type: "development")
    match(type: "appstore")

    update_code_signing_settings(
      use_automatic_signing: false,
      team_id: ENV["sigh_#{ENV['APP_ID']}_appstore_team-id"],
      code_sign_identity: "iPhone Distribution",
      path: "ios/App/App.xcodeproj",
      profile_name: ENV["sigh_#{ENV['APP_ID']}_appstore_profile-name"],
      profile_uuid: ENV["sigh_#{ENV['APP_ID']}_appstore"]
    )

    increment_build_number(
      build_number: ENV["BUILD_NUMBER"],
      xcodeproj: "ios/App/App.xcodeproj",
    )

    increment_version_number( 
      version_number: ENV["VERSION_NUMBER"],
      xcodeproj: "ios/App/App.xcodeproj",
    )

    build_app(
      workspace: "ios/App/App.xcworkspace", 
      scheme: "App", 
      output_name: "#{ENV['APP_NAME']} - #{ENV['VERSION_NUMBER']} (#{ENV['BUILD_NUMBER']}).ipa",
      xcargs: "-allowProvisioningUpdates"
    )
    
    upload_to_testflight
  end

  desc "Push a new build to the App Store"
  lane :app_store do
    setup_ci
    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
      key_content: ENV['APP_STORE_CONNECT_KEY']
    )

    match(type: "appstore")

    update_code_signing_settings(
      use_automatic_signing: false,
      team_id: ENV["sigh_#{ENV['APP_ID']}_appstore_team-id"],
      code_sign_identity: "iPhone Distribution",
      path: "ios/App/App.xcodeproj",
      profile_name: ENV["sigh_#{ENV['APP_ID']}_appstore_profile-name"],
      profile_uuid: ENV["sigh_#{ENV['APP_ID']}_appstore"]
    )

    increment_build_number(
      build_number: ENV["BUILD_NUMBER"],
      xcodeproj: "ios/App/App.xcodeproj",
    )

    increment_version_number( 
      version_number: ENV["VERSION_NUMBER"],
      xcodeproj: "ios/App/App.xcodeproj",
    )

    build_app(
      workspace: "ios/App/App.xcworkspace", 
      scheme: "App", 
      output_name: "#{ENV['APP_NAME']} - #{ENV['VERSION_NUMBER']} (#{ENV['BUILD_NUMBER']}).ipa",
      xcargs: "-allowProvisioningUpdates"
    )
    
    # TODO: Variable flow for either handling metadata/screenshots or not
    upload_to_app_store(
      force: true,
      skip_metadata: true,
      skip_screenshots: true,
      precheck_include_in_app_purchases: false # Doesn't work with App Store Connect API key
    )
  end

  # TODO: This is not configured to work.
  # It should be an optional path where someone with a local Mac can run this to set up the developer portal and iTC
  lane :create_app do
    produce
  end

  lane :init_ci do
    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
      key_content: ENV['APP_STORE_CONNECT_KEY']
    )

    github_action(
      api_token: ENV["GH_PAT"],
      org: org,
      repo: repo,
      match_org: match_org,
      match_repo: match_repo,
      writable_deploy_key: true
    )

    # TODO: Can we do this on first run immediately after github_action, or does this need to be a subsequent run?
    match(type: "development")
    match(type: "appstore")
  end
end
