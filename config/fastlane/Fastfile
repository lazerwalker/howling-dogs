require 'pp'

org, repo = (ENV["GITHUB_REPOSITORY"] || "/").split("/")
match_org, match_repo = (ENV["MATCH_REPOSITORY"] || "/").split("/")

default_platform(:ios)  

platform :android do
  desc "Generate an APK"
  lane :build do
    gradle(
      task: 'assemble',
      build_type: 'Release',
      project_dir: 'android'
    )  
  end 
end

platform :ios do
  desc "Generate a production IPA"
  lane :build do
    setup_ci
    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
      key_content: ENV['APP_STORE_CONNECT_KEY']
    )

    # TODO: Will OTA IPAs require dev or appstore?
    match(type: "appstore")

    update_code_signing_settings(
      use_automatic_signing: false,
      team_id: ENV["sigh_#{ENV['BUNDLE_ID']}_appstore_team-id"],
      code_sign_identity: "iPhone Distribution",
      path: "ios/App/App.xcodeproj",
      profile_name: ENV["sigh_#{ENV['BUNDLE_ID']}_appstore_profile-name"],
      profile_uuid: ENV["sigh_#{ENV['BUNDLE_ID']}_appstore"]
    )

    increment_build_number(
      build_number: ENV["BUILD_NUMBER"],
      xcodeproj: "ios/App/App.xcodeproj",
    )

    increment_version_number( 
      version_number: ENV["VERSION"],
      xcodeproj: "ios/App/App.xcodeproj",
    )

    build_app(
      workspace: "ios/App/App.xcworkspace", 
      scheme: "App", 
      output_name: "#{ENV['DISPLAY_NAME']} - #{ENV['VERSION']} (#{ENV['BUILD_NUMBER']}).ipa",
      xcargs: "-allowProvisioningUpdates"
    )
  end

  desc "Push a new beta build to TestFlight"
  lane :testflight_beta do
    build
    upload_to_testflight
  end

  desc "Push a new build to the App Store"
  lane :app_store do
    build

    # TODO: Variable flow for either handling metadata/screenshots or not
    upload_to_app_store(
      force: true,
      skip_metadata: true,
      skip_screenshots: true,
      precheck_include_in_app_purchases: false # Doesn't work with App Store Connect API key
    )
  end

  # TODO: This is not configured to work.
  # It should be an optional path where someone with a local Mac can run this to set up the developer portal and iTC
  lane :create_app do
    produce
  end

  lane :init_ci do
    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
      key_content: ENV['APP_STORE_CONNECT_KEY']
    )

    github_action(
      api_token: ENV["GH_PAT"],
      org: org,
      repo: repo,
      match_org: match_org,
      match_repo: match_repo,
      writable_deploy_key: true
    )

    # TODO: Can we do this on first run immediately after github_action, or does this need to be a subsequent run?
    match(type: "development")
    match(type: "appstore")
  end

  lane :register_udid do
    setup_ci
    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
      key_content: ENV['APP_STORE_CONNECT_KEY']
    )

    register_devices(
      devices: {
        "#{ENV['DEVICE_NAME']}" => ENV['UDID']
      }
    )
  end
end
